
public class Tiling_Problem {
	public static int recursion(int N) {
		if (N == 0) return 1;
		if (N == 1) return 1;
		return recursion(N - 1) + recursion(N-2);
	}
	
	public static int memoization(int N) {
		int[] memo = new int[N + 1];
		memo[0] = 1;
		memo[1] = 1;
		for (int i = 2; i <= N; i++) memo[i] = memo[i-1] + memo[i-2];
		return memo[N];
	}
	
	static int[] memoDP;
	public static int DP(int N) {
		if (N == 0) return 1;
		if (N == 1) return 1;
		if (memoDP[N] != 0) return memoDP[N];
		memoDP[N] = DP(N - 1) + DP(N - 2);
		return memoDP[N];
	}
}
