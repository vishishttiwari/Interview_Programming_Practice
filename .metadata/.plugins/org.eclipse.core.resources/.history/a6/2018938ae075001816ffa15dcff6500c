package Longest_Increasing_Subsequence;

public class Maximum_Sum_Subsequence_Such_That_No_Three_Are_Consecutive {
	public static void main(String[] args) {
		System.out.println(memoization(new int[]{3000, 2000, 1000, 3, 10}));
	}
	
	public static int memoization(int[] arr) {
		int[] memo = arr.clone();
		boolean[] memoTwice = new boolean[arr.length];
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < i; j++)
				if (arr[i] >= arr[j]) {
					if ((memo[j] + arr[i] > memo[i]) && !memoTwice[j]) {
						memo[i] = memo[j] + arr[i];
						if (j + 1 == i) memoTwice[i] = true;
					}
				}
			max = Math.max(max, memo[i]);
		}
		return max;
	}
}
