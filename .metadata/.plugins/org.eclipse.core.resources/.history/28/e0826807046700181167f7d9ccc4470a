package checking;

import java.util.ArrayList;

import general.Node;

public class Check_If_Leaf_Travel_Of_Two_Binary_Trees_Is_Same {
	public static void main(String[] args) {
		
		Node root = new Node(1);
		root.left = new Node(2);
		root.right = new Node(3);
		root.left.left = new Node(4);
		root.right.left = new Node(6);
		root.right.right = new Node(7);
		
		Node root1 = new Node(0);
		root1.left = new Node(5);
		root1.right = new Node(8);
		root1.left.right = new Node(4);
		root1.right.left = new Node(6);
		root1.right.right = new Node(7);
		
		System.out.println(check(root, root1));
	}
	
	static ArrayList<Integer> arr1;
	static ArrayList<Integer> arr2;
	public static boolean check(Node root1, Node root2) {
		arr1 = new ArrayList<Integer>();
		arr2 = new ArrayList<Integer>();
		inorder1(root1);
		inorder2(root2);
		return (arr1.equals(arr2));
	}
	
	public static void inorder1(Node root) {
		if (root == null) return;
		inorder1(root.left);
		if ((root.left == null) && (root.right == null)) arr1.add(root.value);
		inorder1(root.right);
	}
	
	public static void inorder2(Node root) {
		if (root == null) return;
		inorder2(root.left);
		if ((root.left == null) && (root.right == null)) arr2.add(root.value);
		inorder2(root.right);
	}
}
