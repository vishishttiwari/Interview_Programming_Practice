package traversal;

import add.Add_Edge;
import print.Print;
import util.Graph;

public class Transpose_Graph {
	public static void main(String[] args) {
		Graph graph = new Graph(new int[]{0,1,2,3,4});
		
		Add_Edge.addDirected(graph, 0, 1);
		Add_Edge.addDirected(graph, 0, 3);
		Add_Edge.addDirected(graph, 0, 4);
		Add_Edge.addDirected(graph, 2, 0);
		Add_Edge.addDirected(graph, 3, 2);
		Add_Edge.addDirected(graph, 4, 1);
		Add_Edge.addDirected(graph, 4, 3);
		
		Print.print(graph);
		Print.print(transpose(graph));
	}
	
	public static Graph transpose(Graph graph) {
		int[] arr = new int[graph.vertices];
		for (int i = 0; i < arr.length; i++)
			arr[i] = i;
		Graph graph1 = new Graph(arr);
		for (int i = 0; i < graph.adjacencyList.length; i++) {
			for (int j = 0; j < graph.adjacencyList[i].list.size(); j++)
				Add_Edge.addDirected(graph1, graph.adjacencyList[i].list.get(j).value, graph.adjacencyList[i].value);
		}
		return graph1;
	}
}
