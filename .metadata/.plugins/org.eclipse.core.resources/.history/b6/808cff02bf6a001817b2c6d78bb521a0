/*
Given n friends, each one can remain single or can be paired up with some other friend. 
Each friend can be paired only once. Find out the total number of ways in which friends 
can remain single or can be paired up.

Examples:

Input  : n = 3
Output : 4
Explanation
{1}, {2}, {3} : all single
{1}, {2,3} : 2 and 3 paired but 1 is single.
{1,2}, {3} : 1 and 2 are paired but 3 is single.
{1,3}, {2} : 1 and 3 are paired but 2 is single.
Note that {1,2} and {2,1} are considered same.
 */

public class Pairing_Friends_Problem {
	static long friendsDP(int n) {
	    long[] memo = new long[n+1];
	    memo[0] = 0;
	    memo[1] = 1;
	    for (int i = 2; i <= n; i++) {
	        memo[i] = memo[i-1] + (i-1)*memo[i-2];
	    }
	    return memo[n];
	}
}
