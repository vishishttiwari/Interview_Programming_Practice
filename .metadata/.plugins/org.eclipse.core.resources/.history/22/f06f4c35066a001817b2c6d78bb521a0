package construction;

import utility.Node;
import utility.Print;

public class Preorder_To_Binary_Search_Tree {
	public static void main(String[] args) {
		Node root = new Node(8);
		root.left = new Node(3);
		root.left.left = new Node(1);
		root.left.right = new Node(6);
		root.left.right.left = new Node(4);
		root.left.right.right = new Node(7);
		root.right = new Node(10);
		root.right.right = new Node(14);
		root.right.right.left = new Node(13);
		
		int[] arr = {10, 5, 1, 7, 40, 50};
		Print.print(constructTree(arr));
	}
	
	public static Node constructTree(int[] pre) {
		Node root = new Node(pre[0]);
		for (int i = 1; i < pre.length; i++) {
			insertRecursive(root, pre[i]);
		}
		return root;
	}
	
	public static Node insertRecursive(Node root, int value) {
		 if (root == null) return new Node(value);
		 if (root.value < value) root.right = insertRecursive(root.right, value);
		 if (root.value > value) root.left = insertRecursive(root.left, value);
		 return root;
	}
}
