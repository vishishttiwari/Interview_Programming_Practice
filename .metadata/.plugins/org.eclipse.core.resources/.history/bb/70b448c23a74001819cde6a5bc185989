
public class Coin_Change_Problem {
	public static void main(String[] args) {
		memo = new int[11];
		System.out.println(recursion(new int[]{2, 5, 3, 6}, 10, 0));
	}
	
	public static int recursion(int[] coins, int value, int coin) {
		if (value == 0) return 1;
		else if (value < 0) return 0;
		int ways = 0;
		for (int i = coin; i < coins.length; i++) 
			ways += recursion(coins, value - coins[i], i);
		return ways;
	}
	
	static int[] memo;
	public static int DP(int[] coins, int value, int coin) {
		if (value == 0) return 1;
		else if (value < 0) return 0;
		if (memo[value] != 0) return memo[value];
		int ways = 0;
		for (int i = coin; i < coins.length; i++) 
			ways += recursion(coins, value - coins[i], i);
		memo[value] = ways;
		return ways;
	}
}
